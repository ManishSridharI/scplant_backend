

services:
  rabbitmq:
    build:
      context: .
      dockerfile: ./rabbitmq.Dockerfile
    image: scplant-rabbitmq
    container_name: "scplant-rabbitmq"
    restart: always
    ports:
      - "5649:5672"
      - "15649:15672"
    expose:
      - 15649
    volumes:
      - ./rabbitmq_data:/data
    env_file:
      - rabbitmq.env
    networks:
      - default
      - scplant-network

  server:
    build:
      context: .
      dockerfile: ./server.Dockerfile
    image: scplant-server
    container_name: "scplant-server"
    # command: sh -c ". ~/.bashrc && python3 manage.py runserver 0.0.0.0:8000"
    command: sh -c ". ~/.bashrc && gunicorn core.wsgi:application --reload --bind 0.0.0.0:8000"
    tty: true
    restart: always
    ports:
      - "8449:8000"
    expose:
      - 8449
    volumes:
      - .:/home/scplant_backend/
    working_dir: /home/scplant_backend/core/
    env_file:
      - server.env
    networks:
      - default
      - scplant-network
    depends_on:
      - rabbitmq

  celery-worker:
    build:
      context: .
      dockerfile: ./celery_worker.Dockerfile
    image: scplant-celery-worker
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    container_name: "scplant-celery-worker"
    # command: sh -c ". ~/.bashrc && conda init bash && conda activate django && python3 -m celery -A core worker -l DEBUG -Q scplantqueue"
    command: sh -c ". ~/.bashrc && python3 -m celery -A core worker -l DEBUG -Q scplantqueue"
    restart: always
    volumes:
      - .:/home/scplant_backend/
    working_dir: /home/scplant_backend/core/
    env_file:
      - celery_worker.env
    networks:
      - default
      - scplant-network
    depends_on:
      - rabbitmq
      - server

  celery-beat:
    build:
      context: .
      dockerfile: ./celery_beat.Dockerfile
    image: scplant-celery-beat
    container_name: "scplant-celery-beat"
    # command: sh -c ". ~/.bashrc && conda init bash && conda activate django && python3 -m celery -A core beat -l DEBUG"
    command: sh -c ". ~/.bashrc && python3 -m celery -A core beat -l DEBUG"
    restart: always
    volumes:
      - .:/home/scplant_backend/
    working_dir: /home/scplant_backend/core/
    env_file:
      - celery_beat.env
    networks:
      - default
      - scplant-network
    depends_on:
      - rabbitmq
      - server

  flower:
    build:
      context: .
      dockerfile: ./flower.Dockerfile
    image: scplant-flower
    container_name: scplant-flower
    command: celery flower
    restart: always
    ports:
      - "5549:5555"
    expose:
      - 5549
    env_file:
      - flower.env
    networks:
      - default
      - scplant-network
    depends_on:
      - rabbitmq
      - celery-worker
      - celery-beat
      - server


networks:
  scplant-network:
    external: true

